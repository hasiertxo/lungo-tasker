(function(){var a,b={}.hasOwnProperty,c=function(a,c){function d(){this.constructor=a}for(var e in c)b.call(c,e)&&(a[e]=c[e]);return d.prototype=c.prototype,a.prototype=new d,a.__super__=c.prototype,a};__Model.Task=function(b){function d(){return a=d.__super__.constructor.apply(this,arguments)}return c(d,b),d.fields("name","description","list","when","important","done"),d.pending=function(){return this.select(function(a){return!a.done})},d.completed=function(){return this.select(function(a){return!!a.done})},d.important=function(){return this.select(function(a){return a.important===!0})},d.notImportant=function(){return this.select(function(a){return a.important===!1})},d.prototype.validate=function(){return this.name?void 0:"name is required"},d}(Monocle.Model)}).call(this),function(){var a=function(a,b){return function(){return a.apply(b,arguments)}},b={}.hasOwnProperty,c=function(a,c){function d(){this.constructor=a}for(var e in c)b.call(c,e)&&(a[e]=c[e]);return d.prototype=c.prototype,a.prototype=new d,a.__super__=c.prototype,a};__View.Task=function(b){function d(){this.bindTaskUpdated=a(this.bindTaskUpdated,this),this.onDelete=a(this.onDelete,this),d.__super__.constructor.apply(this,arguments),__Model.Task.bind("update",this.bindTaskUpdated),this.append(this.model)}return c(d,b),d.prototype.template='<li class="selectable {{#done}}accept{{/done}}{{^done}}cancel{{/done}}">\n    <span class="icon {{#done}}ok{{/done}}"></span>\n  <div class="on-right">{{list}}</div>\n  <strong>{{name}}</strong>\n  <small>{{description}}</small>\n</li>',d.prototype.events={"swipeLeft li":"onDelete","hold li":"onDone","singleTap li":"onView"},d.prototype.elements={"input.toggle":"toggle"},d.prototype.onDone=function(){return this.model.updateAttributes({done:!this.model.done}),this.refresh()},d.prototype.onDelete=function(){var a=this;return Lungo.Notification.confirm({icon:"user",title:"Delete",description:"Confirm delete?",accept:{icon:"checkmark",label:"Accept",callback:function(){return a.model.destroy(),a.remove()}},cancel:{icon:"close",label:"Cancel",callback:function(){return a}}})},d.prototype.onView=function(){return __Controller.Task.show(this.model)},d.prototype.bindTaskUpdated=function(a){var b;return a.uid===this.model.uid&&(this.model=a,b=null,"article#normal ul"===this.container.selector&&this.model.important===!0?b="high":"article#high ul"===this.container.selector&&this.model.important===!1&&(b="normal"),null!=b)?(this.remove(),this.container=Monocle.Dom("article#"+b+" ul"),Monocle.Dom("article#"+b+" ul").append(this.el),this.refresh()):void 0},d}(Monocle.View)}.call(this),function(){var a,b={}.hasOwnProperty,c=function(a,c){function d(){this.constructor=a}for(var e in c)b.call(c,e)&&(a[e]=c[e]);return d.prototype=c.prototype,a.prototype=new d,a.__super__=c.prototype,a};a=function(a){function b(){b.__super__.constructor.apply(this,arguments),this["new"]=this._new,this.show=this._show}return c(b,a),b.prototype.elements={"input[name=name]":"name","textarea[name=description]":"description","select[name=list]":"list","input[name=when]":"when","input[name=important]":"important"},b.prototype.events={"click [data-action=save]":"onSave"},b.prototype.onSave=function(){return this.current?this.current.updateAttributes({name:this.name.val(),description:this.description.val(),list:this.list.val(),when:this.when.val(),important:this.important[0].checked}):""!==this.name.val()?(Lungo.Notification.show(),__Model.Task.create({name:this.name.val(),description:this.description.val(),list:this.list.val(),when:this.when.val(),important:this.important[0].checked})):void 0},b.prototype._new=function(a){return this.current=null!=a?a:null,this._initializeFields()},b.prototype._show=function(a){return this.current=a,this.name.val(this.current.name),this.description.val(this.current.description),this.list.val(this.current.list),this.when.val(this.current.when),this.important.val(this.current.important),Lungo.Router.section("task")},b.prototype._initializeFields=function(){return this.name.val(""),this.description.val(""),this.list.val(""),this.when.val(""),Lungo.Router.section("task")},b}(Monocle.Controller),$$(function(){return __Controller.Task=new a("section#task")})}.call(this),function(){var a=function(a,b){return function(){return a.apply(b,arguments)}},b={}.hasOwnProperty,c=function(a,c){function d(){this.constructor=a}for(var e in c)b.call(c,e)&&(a[e]=c[e]);return d.prototype=c.prototype,a.prototype=new d,a.__super__=c.prototype,a};__Controller.TasksCtrl=function(b){function d(){this.bindTaskCreated=a(this.bindTaskCreated,this),this.bindTaskUpdated=a(this.bindTaskUpdated,this),d.__super__.constructor.apply(this,arguments),__Model.Task.bind("create",this.bindTaskCreated),__Model.Task.bind("update",this.bindTaskUpdated),__Model.Task.bind("destroy",this.updateCounters)}return c(d,b),d.prototype.events={"click [data-action=new]":"onNew","click [data-action=logout]":"onLogout"},d.prototype.elements={"#pending":"pending","#important":"important",input:"name"},d.prototype.onNew=function(){return __Controller.Task["new"]()},d.prototype.onLogout=function(){return Lungo.Notification.confirm({icon:"user",title:"User Logout",description:"Do you want to logout?",accept:{icon:"checkmark",label:"Accept",callback:function(){return this}},cancel:{icon:"close",label:"Cancel",callback:function(){return this}}})},d.prototype.bindTaskUpdated=function(){return Lungo.Router.back(),Lungo.Notification.hide(),this.updateCounters()},d.prototype.bindTaskCreated=function(a){var b;return b=a.important===!0?"high":"normal",this.view=new __View.Task({model:a,container:"article#"+b+" ul"}),Lungo.Router.back(),Lungo.Notification.hide(),this.updateCounters()},d.prototype.updateCounters=function(){return Lungo.Element.count("#headImportant",__Model.Task.important().length),Lungo.Element.count("#important",__Model.Task.important().length),Lungo.Element.count("#headPending",__Model.Task.notImportant().length),Lungo.Element.count("#pending",__Model.Task.notImportant().length)},d}(Monocle.Controller),$$(function(){var a;return Lungo.init({}),a=new __Controller.TasksCtrl("section#tasks"),__Model.Task.create({name:"Tarea importante",important:!0}),__Model.Task.create({name:"Tarea no importante",important:!1})})}.call(this);